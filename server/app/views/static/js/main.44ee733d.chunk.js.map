{"version":3,"sources":["http-common.ts","services/tutorial.service.ts","components/add-tutorial.component.tsx","components/tutorial.component.tsx","components/tutorials-list.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","title","AddTutorial","props","onChangeTitle","bind","onChangeDescription","saveTutorial","newTutorial","state","description","published","submitted","e","this","setState","target","value","TutorialDataService","then","response","console","log","catch","className","onClick","htmlFor","type","required","onChange","name","Component","Tutorial","getTutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","message","match","params","prevState","status","undefined","update","history","push","TutorialsList","onChangeSearchTitle","retrieveTutorials","refreshList","setActiveTutorial","removeAllTutorials","searchTitle","tutorials","currentIndex","getAll","tutorial","index","deleteAll","findByTitle","placeholder","map","to","App","href","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44ee733d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"http://localhost:8080/api\",\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n})","import http from \"../http-common\";\n\nclass TutorialDataService {\n  getAll() {\n    return http.get(\"/tutorials\");\n  }\n  get(id: number) {\n    return http.get(`/tutorials/${id}`);\n  }\n  create(data: any) {\n    return http.post(\"/tutorials\", data);\n  }\n  update(id: number, data: any) {\n    return http.put(`/tutorials/${id}`, data);\n  }\n\n  delete(id: number) {\n    return http.delete(`/tutorials/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/tutorials`);\n  }\n\n  findByTitle(title: string) {\n    return http.get(`/tutorials?title=${title}`);\n  }\n}\n\nexport default new TutorialDataService();\n","import React, {Component} from 'react';\nimport TutorialDataService from \"../services/tutorial.service\"\ninterface Props {\n}\ninterface State {\n    \"title\": string,\n    \"description\": string,\n    \"id\": number | null,\n    \"published\": boolean,\n    \"submitted\": boolean\n}\n\n\nexport default class AddTutorial extends Component<Props, State>{\n    constructor(props: Props){\n        super(props);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeDescription = this.onChangeDescription.bind(this);\n        this.saveTutorial = this.saveTutorial.bind(this);\n        this.newTutorial = this.newTutorial.bind(this);\n        this.state = {\n            id: null,\n            title: \"\",\n            description: \"\",\n            published: false,\n            submitted: false\n        }\n    }\n\n    onChangeTitle(e: any) {\n        this.setState({\n          title: e.target.value\n        });\n      }\n    \n      onChangeDescription(e: any) {\n        this.setState({\n          description: e.target.value\n        });\n      }\n    \n      saveTutorial() {\n        var data = {\n          title: this.state.title,\n          description: this.state.description\n        };\n    \n        TutorialDataService.create(data)\n          .then(response => {\n            this.setState({\n              id: response.data.id,\n              title: response.data.title,\n              description: response.data.description,\n              published: response.data.published,\n    \n              submitted: true\n            });\n            console.log(response.data);\n          })\n          .catch(e => {\n            console.log(e);\n          });\n      }\n    \n      newTutorial() {\n        this.setState({\n          id: null,\n          title: \"\",\n          description: \"\",\n          published: false,\n          submitted: false\n        });\n      }\n      render() {\n        return (\n        <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.title}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n        )\n      }\n}","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\ninterface Props {\n  [x: string]: any;\n}\n//TO-DO shouldn't be optional\ninterface tutorial {\n  title?: string;\n  description?: string;\n  published?: boolean;\n  id?: number | null;\n}\ninterface State {\n  currentTutorial: null | tutorial;\n  message: string;\n}\n\nexport default class Tutorial extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getTutorial = this.getTutorial.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateTutorial = this.updateTutorial.bind(this);\n    this.deleteTutorial = this.deleteTutorial.bind(this);\n\n    this.state = {\n      currentTutorial: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false,\n      },\n      message: \"\",\n    };\n  }\n  //TO-DO Figure out what componentDidMount does\n  componentDidMount() {\n    // console.log(this.props.match.params.id);\n    this.getTutorial(this.props.match.params.id);\n  }\n\n  onChangeTitle(e: React.ChangeEvent<HTMLInputElement>) {\n    const title = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          title: title,\n        },\n      };\n    });\n  }\n\n  onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    const description = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          description: description,\n        },\n      };\n    });\n    // this.setState(prevState => ({\n    //   currentTutorial: {\n    //     ...prevState.currentTutorial,\n    //     description: description\n    //   }\n    // }));\n  }\n\n  getTutorial(id: number) {\n    TutorialDataService.get(id)\n      .then((response) => {\n        this.setState({\n          currentTutorial: response.data,\n        });\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  updatePublished(status: boolean) {\n    if (this.state.currentTutorial != null) {\n      var data = {\n        id: this.state.currentTutorial.id,\n        title: this.state.currentTutorial.title,\n        description: this.state.currentTutorial.description,\n        published: status,\n      };\n      if (\n        this.state.currentTutorial.id != null ||\n        this.state.currentTutorial.id != undefined\n      ) {\n        TutorialDataService.update(this.state.currentTutorial.id, data)\n          .then((response) => {\n            this.setState((prevState) => ({\n              currentTutorial: {\n                ...prevState.currentTutorial,\n                published: status,\n              },\n            }));\n            console.log(response.data);\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n      } else {\n        throw \"currentTutorial.id is either a null or undefined\";\n      }\n    } else {\n      throw \"currentTutorial cannot be null or undefined\";\n    }\n  }\n\n  updateTutorial() {\n    if (this.state.currentTutorial != null) {\n      if (\n        this.state.currentTutorial.id != null ||\n        this.state.currentTutorial.id != undefined\n      ) {\n        TutorialDataService.update(\n          this.state.currentTutorial.id,\n          this.state.currentTutorial\n        )\n          .then((response) => {\n            console.log(response.data);\n            this.setState({\n              message: \"The tutorial was updated successfully!\",\n            });\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n      } else {\n        throw \"currentTutorial.id is either a null or undefined\";\n      }\n    } else {\n      throw \"currentTutorial not defined\";\n    }\n  }\n  deleteTutorial() {\n    if (this.state.currentTutorial != null) {\n      if (\n        this.state.currentTutorial.id != null ||\n        this.state.currentTutorial.id != undefined\n      ) {\n        TutorialDataService.delete(this.state.currentTutorial.id)\n          .then((response) => {\n            console.log(response.data);\n            this.props.history.push(\"/tutorials\");\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n      } else {\n        throw \"currentTutorial.id is either a null or undefined\";\n      }\n    } else {\n      throw \"currentTutorial is null\";\n    }\n  }\n\n  render() {\n    const { currentTutorial } = this.state;\n\n    return (\n      <div>\n        {currentTutorial ? (\n          <div className=\"edit-form\">\n            <h4>Tutorial</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentTutorial.title}\n                  onChange={this.onChangeTitle}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  value={currentTutorial.description}\n                  onChange={this.onChangeDescription}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>\n                  <strong>Status:</strong>\n                </label>\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\n              </div>\n            </form>\n\n            {currentTutorial.published ? (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(false)}\n              >\n                UnPublish\n              </button>\n            ) : (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(true)}\n              >\n                Publish\n              </button>\n            )}\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteTutorial}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateTutorial}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Tutorial...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport { Link } from \"react-router-dom\";\ninterface Props {}\ninterface tutorial {\n  title: string;\n  description: string;\n  published: \"published\" | \"pending\";\n  id: number;\n}\ninterface State {\n  tutorials: tutorial[];\n  currentTutorial: null | tutorial;\n  currentIndex: number;\n  searchTitle: string;\n}\n\nexport default class TutorialsList extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.retrieveTutorials = this.retrieveTutorials.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      searchTitle: \"\",\n    };\n  }\n  componentDidMount() {\n    this.retrieveTutorials();\n  }\n\n  onChangeSearchTitle(e: any) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle,\n    });\n  }\n\n  retrieveTutorials() {\n    TutorialDataService.getAll()\n      .then((response) => {\n        this.setState({\n          tutorials: response.data,\n        });\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveTutorials();\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1,\n    });\n  }\n\n  setActiveTutorial(tutorial: tutorial, index: number) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index,\n    });\n  }\n\n  removeAllTutorials() {\n    TutorialDataService.deleteAll()\n      .then((response) => {\n        console.log(response.data);\n        this.refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  searchTitle() {\n    TutorialDataService.findByTitle(this.state.searchTitle)\n      .then((response) => {\n        this.setState({\n          tutorials: response.data,\n        });\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n  render() {\n    const {\n      searchTitle,\n      tutorials,\n      currentTutorial,\n      currentIndex,\n    } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search by title\"\n              value={searchTitle}\n              onChange={this.onChangeSearchTitle}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                onClick={this.searchTitle}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <h4>Tutorials List</h4>\n\n          <ul className=\"list-group\">\n            {tutorials &&\n              tutorials.map((tutorial: tutorial, index: number) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\n                  key={index}\n                >\n                  {tutorial.title}\n                </li>\n              ))}\n          </ul>\n\n          <button\n            className=\"m-3 btn btn-sm btn-danger\"\n            onClick={this.removeAllTutorials}\n          >\n            Remove All\n          </button>\n        </div>\n        <div className=\"col-md-6\">\n          {currentTutorial ? (\n            <div>\n              <h4>Tutorial</h4>\n              <div>\n                <label>\n                  <strong>Title:</strong>\n                </label>{\" \"}\n                {currentTutorial.title}\n              </div>\n              <div>\n                <label>\n                  <strong>Description:</strong>\n                </label>{\" \"}\n                {currentTutorial.description}\n              </div>\n              <div>\n                <label>\n                  <strong>Status:</strong>\n                </label>{\" \"}\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\n              </div>\n\n              <Link\n                to={\"/tutorials/\" + currentTutorial.id}\n                className=\"badge badge-warning\"\n              >\n                Edit\n              </Link>\n            </div>\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a Tutorial...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport {Link, Switch, Route} from 'react-router-dom';\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport Tutorial from \"./components/tutorial.component\";\nimport TutorialsList from \"./components/tutorials-list.component\";\n\n\nclass App extends Component {\n  render() {\n    return (\n    <div className=\"App\">\n      <nav className = \"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/tutorials\" className = \"navbar-brand\">Alan</a>\n        <div className = \"navbar-nav mr-auto\">\n          <li className = 'nav-item'>\n          <Link to={\"/tutorials\"} className = \"nav-link\">\n            Tutorials\n          </Link>\n          </li>\n          <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          \n\n        </div>\n      </nav>\n\n      <div className = \"container mt-3\">\n        <Switch>\n            <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n            <Route exact path=\"/add\" component={AddTutorial} />\n            <Route path=\"/tutorials/:id\" component={Tutorial} />\n        </Switch>\n      </div>\n    </div>)\n  }\n}\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}